# MJS - temp dockerfile (based on sbmanagement ui) to see if UI is working when served by nginx


# 1. Prepare for the build.
FROM node:14-alpine AS build
WORKDIR /app

ARG target_environment
ENV PATH /app/node_modules/.bin:$PATH

# RUN npm install react-scripts@4.0.3 -g 
RUN npm install react-scripts@latest -g 
COPY CdrAuthServer.UI/package.json package.json
COPY CdrAuthServer.UI/package-lock.json package-lock.json
COPY CdrAuthServer.UI/craco.config.js craco.config.js
COPY CdrAuthServer.UI/.env.${target_environment} .env.local
RUN npm ci

# 2. Build the app for the target environment.
COPY CdrAuthServer.UI/. .
RUN npm run build

# 3. Use nginx to serve the app.
FROM nginx:alpine

# Copy nginx config to container.
COPY CdrAuthServer.UI/nginx/nginx.conf /etc/nginx/conf.d/default.conf
COPY CdrAuthServer.UI/nginx/nginx.gzip.conf /etc/nginx/conf.d/gzip.conf

# Copy the TLS certificates to the container.
# COPY CdrAuthServer.UI/nginx/ssl/sbmanagement-ui.crt /etc/nginx/ssl/sbmanagement-ui.crt
# COPY CdrAuthServer.UI/nginx/ssl/sbmanagement-ui.key /etc/nginx/ssl/sbmanagement-ui.key

# Copy build files to nginx output folder.
COPY --from=build /app/build /usr/share/nginx/html

# Expose the container on port 443 and start nginx.
EXPOSE 443 80
CMD ["nginx", "-g", "daemon off;"]
